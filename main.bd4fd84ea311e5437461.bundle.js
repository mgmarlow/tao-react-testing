(self.webpackChunktao_react_testing=self.webpackChunktao_react_testing||[]).push([[179],{5393:function(t,e,n){"use strict";n.r(e),n.d(e,{slides:function(){return o},backgrounds:function(){return i},fusumaProps:function(){return s},default:function(){return c}});var l=n(686),r=n(7032);function a(){return(a=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(t[l]=n[l])}return t}).apply(this,arguments)}const o=[t=>(0,r.kt)(l.Fragment,null,(0,r.kt)("h1",null,"Testing React Components"))],i=[0],s=[{classes:"title"}],u={};function c({components:t,...e}){return(0,r.kt)("wrapper",a({},u,e,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",null,"Testing React Components"))}c.isMDXComponent=!0},6916:function(t,e,n){"use strict";n.r(e),n.d(e,{slides:function(){return o},backgrounds:function(){return i},fusumaProps:function(){return s},default:function(){return c}});var l=n(686),r=n(7032);function a(){return(a=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(t[l]=n[l])}return t}).apply(this,arguments)}const o=[t=>(0,r.kt)(l.Fragment,null,(0,r.kt)("h2",null,"Discussion Plan"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"React testing throughout the years"),(0,r.kt)("li",{parentName:"ul"},"The rise of integration tests"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@testing-library/react")),(0,r.kt)("li",{parentName:"ul"},"Demo")))],i=[0],s=[{}],u={};function c({components:t,...e}){return(0,r.kt)("wrapper",a({},u,e,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",null,"Discussion Plan"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"React testing throughout the years"),(0,r.kt)("li",{parentName:"ul"},"The rise of integration tests"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@testing-library/react")),(0,r.kt)("li",{parentName:"ul"},"Demo")))}c.isMDXComponent=!0},8798:function(t,e,n){"use strict";n.r(e),n.d(e,{slides:function(){return o},backgrounds:function(){return i},fusumaProps:function(){return s},default:function(){return c}});var l=n(686),r=n(7032);function a(){return(a=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(t[l]=n[l])}return t}).apply(this,arguments)}const o=[t=>(0,r.kt)(l.Fragment,null,(0,r.kt)("h2",null,"Enzyme"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The defacto way to test React"),(0,r.kt)("li",{parentName:"ul"},"Tap directly into the component lifecycle"),(0,r.kt)("li",{parentName:"ul"},"Shallow rendering")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import MyComponent from './MyComponent'\n\ndescribe('MyComponent', () => {\n  it('should call #handleClick', () => {\n    const handleClick = jest.fn()\n    const wrapper = shallow(<MyComponent onClick={handleClick} />)\n\n    wrapper.find('button').simulate('click)\n\n    expect(handleClick).toHaveBeenCalled()\n  })\n})\n"))),t=>(0,r.kt)(l.Fragment,null,(0,r.kt)("h2",null,"Shallow rendering"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Shallow rendering is useful to constrain yourself to testing a component as a unit, and to ensure that your tests aren't indirectly asserting on behavior of child components."),(0,r.kt)("p",{parentName:"blockquote"},"-- Enzyme docs"))),t=>(0,r.kt)(l.Fragment,null,(0,r.kt)("h2",null,"Why shallow render?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Faster test suites"),(0,r.kt)("li",{parentName:"ul"},"Test components as self-contained units"),(0,r.kt)("li",{parentName:"ul"},"Avoid re-testing behavior down the component tree"),(0,r.kt)("li",{parentName:"ul"},"Can call component lifecycle functions directly from the tests"))),t=>(0,r.kt)(l.Fragment,null,(0,r.kt)("h2",null,"The reality"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"With shallow rendering, I can refactor my component's implementation and my tests break. With shallow rendering, I can break my application and my tests say everything's still working."),(0,r.kt)("p",{parentName:"blockquote"},"-- Kent C. Dodds"))),t=>(0,r.kt)(l.Fragment,null,(0,r.kt)("h2",null,"Problems with shallow"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"shallow")," tests are brittle"),(0,r.kt)("li",{parentName:"ul"},"Most complex components need to use ",(0,r.kt)("inlineCode",{parentName:"li"},"mount")," anyway"),(0,r.kt)("li",{parentName:"ul"},"Tests are concerned with implementation details"))),t=>(0,r.kt)(l.Fragment,null,(0,r.kt)("h1",null,"How can we do better?"))],i=[0,0,0,0,0,0],s=[{},{},{},{},{},{}],u={};function c({components:t,...e}){return(0,r.kt)("wrapper",a({},u,e,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",null,"Enzyme"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The defacto way to test React"),(0,r.kt)("li",{parentName:"ul"},"Tap directly into the component lifecycle"),(0,r.kt)("li",{parentName:"ul"},"Shallow rendering")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import MyComponent from './MyComponent'\n\ndescribe('MyComponent', () => {\n  it('should call #handleClick', () => {\n    const handleClick = jest.fn()\n    const wrapper = shallow(<MyComponent onClick={handleClick} />)\n\n    wrapper.find('button').simulate('click)\n\n    expect(handleClick).toHaveBeenCalled()\n  })\n})\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",null,"Shallow rendering"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Shallow rendering is useful to constrain yourself to testing a component as a unit, and to ensure that your tests aren't indirectly asserting on behavior of child components."),(0,r.kt)("p",{parentName:"blockquote"},"-- Enzyme docs")),(0,r.kt)("hr",null),(0,r.kt)("h2",null,"Why shallow render?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Faster test suites"),(0,r.kt)("li",{parentName:"ul"},"Test components as self-contained units"),(0,r.kt)("li",{parentName:"ul"},"Avoid re-testing behavior down the component tree"),(0,r.kt)("li",{parentName:"ul"},"Can call component lifecycle functions directly from the tests")),(0,r.kt)("hr",null),(0,r.kt)("h2",null,"The reality"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"With shallow rendering, I can refactor my component's implementation and my tests break. With shallow rendering, I can break my application and my tests say everything's still working."),(0,r.kt)("p",{parentName:"blockquote"},"-- Kent C. Dodds")),(0,r.kt)("hr",null),(0,r.kt)("h2",null,"Problems with shallow"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"shallow")," tests are brittle"),(0,r.kt)("li",{parentName:"ul"},"Most complex components need to use ",(0,r.kt)("inlineCode",{parentName:"li"},"mount")," anyway"),(0,r.kt)("li",{parentName:"ul"},"Tests are concerned with implementation details")),(0,r.kt)("hr",null),(0,r.kt)("h1",null,"How can we do better?"))}c.isMDXComponent=!0},1409:function(t,e,n){"use strict";n.r(e),n.d(e,{slides:function(){return o},backgrounds:function(){return i},fusumaProps:function(){return s},default:function(){return c}});var l=n(686),r=n(7032);function a(){return(a=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(t[l]=n[l])}return t}).apply(this,arguments)}const o=[t=>(0,r.kt)(l.Fragment,null,(0,r.kt)("h2",null,(0,r.kt)("inlineCode",{parentName:"h2"},"@testing-library/react")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Encourages better testing practices by using ",(0,r.kt)("strong",{parentName:"li"},"ARIA roles")),(0,r.kt)("li",{parentName:"ul"},"Tests work with actual DOM nodes"),(0,r.kt)("li",{parentName:"ul"},"Internal React API is not publicly accessible"),(0,r.kt)("li",{parentName:"ul"},'"Shallow" rendering is still possible via mocking'))),t=>(0,r.kt)(l.Fragment,null,(0,r.kt)("h2",null,(0,r.kt)("inlineCode",{parentName:"h2"},"enzyme")," vs. ",(0,r.kt)("inlineCode",{parentName:"h2"},"@testing-library/react")),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(5172)})))],i=[0,0],s=[{},{}],u={};function c({components:t,...e}){return(0,r.kt)("wrapper",a({},u,e,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",null,(0,r.kt)("inlineCode",{parentName:"h2"},"@testing-library/react")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Encourages better testing practices by using ",(0,r.kt)("strong",{parentName:"li"},"ARIA roles")),(0,r.kt)("li",{parentName:"ul"},"Tests work with actual DOM nodes"),(0,r.kt)("li",{parentName:"ul"},"Internal React API is not publicly accessible"),(0,r.kt)("li",{parentName:"ul"},'"Shallow" rendering is still possible via mocking')),(0,r.kt)("hr",null),(0,r.kt)("h2",null,(0,r.kt)("inlineCode",{parentName:"h2"},"enzyme")," vs. ",(0,r.kt)("inlineCode",{parentName:"h2"},"@testing-library/react")),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(5172)})))}c.isMDXComponent=!0},659:function(t,e,n){"use strict";n.r(e)},5172:function(t,e,n){"use strict";t.exports=n.p+"92cbe65567ddfc8e8b41.webp"},3447:function(t,e,n){var l={"./0-title.md":5393,"./1-overview.md":6916,"./2-enzyme.md":8798,"./3-react-testing-library.md":1409};function r(t){var e=a(t);return n(e)}function a(t){if(!n.o(l,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return l[t]}r.keys=function(){return Object.keys(l)},r.resolve=a,t.exports=r,r.id=3447}},function(t){"use strict";var e;e=t.x,t.x=function(){var n=e();return[65,260,44].map(t.E),n}},[[5377,666,736],[4211,666,736],[5800,666,736]]]);